networks:
  cnab-parser-pro-network:
    driver: bridge

volumes:
  pg_data:

services:
  app:
    container_name: app
    hostname: app
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - cnab-parser-pro-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/api/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - cnab-parser-pro-network
    depends_on:
      - app
    restart: always

  db:
    image: postgres
    container_name: db
    hostname: db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - cnab-parser-pro-network
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DB_USER}"]
      interval: 5s
      timeout: 3s
      retries: 3


  keycloak:
    image: quay.io/keycloak/keycloak:23.0.3
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8085
    volumes:
      - ./auth/realm.json:/opt/keycloak/data/import/realm.json
    networks:
      - cnab-parser-pro-network
    ports:
      - "8085:8085"